<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol">

    <Style BasedOn="{x:Null}" TargetType="Path" />

    <Style
        x:Key="MyToggleButton"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BasePrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ComboToggleButton"
        BasedOn="{StaticResource ComboBoxBaseStyle}"
        TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ComboBox
                            Name="ComboBox1"
                            Foreground="Transparent"
                            ItemsSource="{TemplateBinding ItemsSource}"
                            SelectedIndex="{TemplateBinding SelectedIndex}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <!--<StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding ImgPath}" Width="32"/>
                                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                    </StackPanel>-->
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource TextBlockSubTitle}" Text="{Binding ImgPath}" />
                                        <TextBlock
                                            Margin="5,0,0,0"
                                            Style="{StaticResource TextBlockSubTitle}"
                                            Text="{Binding Name}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Border
                            Width="{Binding ElementName=ComboBox1, Path=ActualHeight}"
                            Margin="3"
                            HorizontalAlignment="Left"
                            Background="{Binding ElementName=ComboBox1, Path=Background}"
                            BorderThickness="0" />
                        <ToggleButton
                            Width="{Binding ElementName=ComboBox1, Path=ActualHeight}"
                            Height="{Binding ElementName=ComboBox1, Path=ActualHeight}"
                            Margin="3"
                            HorizontalAlignment="Left"
                            BorderThickness="0"
                            DataContext="{Binding ElementName=ComboBox1, Path=SelectedItem}"
                            IsChecked="{Binding IsSelected}"
                            Style="{StaticResource MyToggleButton}">
                            <ToggleButton.Content>
                                <StackPanel>
                                    <!--<Image HorizontalAlignment="Left"  Source="{Binding ImgPath}"/>-->
                                    <TextBlock
                                        FontSize="{TemplateBinding FontSize}"
                                        Style="{StaticResource TextBlockLarge}"
                                        Text="{Binding ImgPath}" />
                                    <TextBlock Style="{StaticResource TextBlockSubTitle}" Text="{Binding Name}" />
                                </StackPanel>
                            </ToggleButton.Content>
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CirclePanelButton"
        BasedOn="{StaticResource ButtonCustom}"
        TargetType="Button">
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Height" Value="77" />
        <Setter Property="Width" Value="36.06" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Path
                            Width="36.06"
                            Height="77"
                            Data="{StaticResource CirclePanelDemoGeometry}"
                            Fill="{DynamicResource PrimaryBrush}" />
                        <Path
                            Margin="12"
                            Data="{StaticResource CirclePanelRightGeometry}"
                            Fill="White"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MessageBoxCustom"
        BasedOn="{StaticResource {x:Type hc:MessageBox}}"
        TargetType="hc:MessageBox">
        <Setter Property="NonClientAreaBackground" Value="#262e2f" />
        <Setter Property="OtherButtonHoverBackground" Value="#888580" />
        <Setter Property="OtherButtonForeground" Value="White" />
        <Setter Property="OtherButtonHoverForeground" Value="White" />
        <Setter Property="NonClientAreaForeground" Value="White" />
        <Setter Property="CloseButtonForeground" Value="White" />
        <Setter Property="Icon" Value="pack://application:,,,/Resource/Image/icon.ico" />
    </Style>

    <Style
        x:Key="DemoInfoSortButtonStyle"
        x:Shared="False"
        BasedOn="{StaticResource ToggleButtonCustom}"
        TargetType="ToggleButton">
        <Setter Property="Content">
            <Setter.Value>
                <Border
                    Width="30"
                    Height="30"
                    Background="{DynamicResource RegionBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="4">
                    <Image Source="pack://application:,,,/Resource/Image/LeftMainContent/SortAscending_gray_16x.png" Stretch="None" />
                </Border>
            </Setter.Value>
        </Setter>
        <Setter Property="hc:StatusSwitchElement.CheckedElement">
            <Setter.Value>
                <Border
                    Width="30"
                    Height="30"
                    BorderBrush="{DynamicResource PrimaryBrush}"
                    BorderThickness="1"
                    CornerRadius="4" />
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="Custom1Transition" x:Shared="False">
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
            From="50"
            To="0"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <ElasticEase Oscillations="1" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="Custom2Transition" x:Shared="False">
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
            From="10"
            To="0"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <ElasticEase Oscillations="1" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="Custom3Transition" x:Shared="False">
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
            From=".8"
            To="1"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <ElasticEase Oscillations="1" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Style
        x:Key="ListBoxItemTransparent"
        BasedOn="{StaticResource ListBoxItemBaseStyle}"
        TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style
        x:Key="ListBoxTransparent"
        BasedOn="{StaticResource ListBoxBaseStyle}"
        TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemTransparent}" />
    </Style>

</ResourceDictionary>